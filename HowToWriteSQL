# How to create a table with single row 
 CREATE TABLE table_name
 (Column 1 int, 
  Column 2 varchar(50), 
  Column 3 varchar(50), 
  ...) 
         
# How to Insert Value into the table with a single row
INSERT INTO table_name(Column 1, Column 2, ... )
 VALUES ('character', value, ... ) 
 
# How to Insert Values into a table with multiple rows.
INSERT INTO table_name(Column 1, Column 2, ... )
 VALUES ('character 1', value 1, ...), 
        ('character 2', value 2, ...),
        ('character 3', value 3, ...)
        
# How to Update a column to NULL
Update table_name SET column_name = NULL

# How to Update a cell to NULL
Update table_name SET column1_name = NULL
WHERE column2_name = 'character' #(or = value)#

# How to Inner Join, Left Outer Join, Right Outer Join or Full Outer Join

SELECT * 
FROM table1_name
INNER JOIN table2_name
     ON table1_name.column = table2_name.column 
-- Here only showing common contents from both tables 

SELECT *
FROM table1_name
LEFT OUTER JOIN table2_name
     ON table1_name.column = table2_name.column
-- Here only showing contents from table1

SELECT *
FROM table1_name
RIGHT OUTER JOIN table2_name
     ON table1_name.column = table2_name.column
-- Here only showing contents from table2

SELECT *
FROM table1_name
FULL OUTER JOIN table2_name
     ON table1_name.column = table2_name.column
-- Here showing all contents from both tables

# How to UNION two tables 

SELECT column1_name, column2_name ... 
FROM table1_name
UNION (ALL)
SELECT column1_name, column2_name ... 
FROM table2_name

# How to use CASE to return different result 

SELECT Column_1, Column_2,
CASE
    WHEN Column = value THEN 'character'
    WHEN Age > value THEN 'character' 
	ELSE 'Character' 
END AS Newcolumn_name
FROM table_name
WHERE Column_1 IS NOT NULL 
ORDER BY Column_1

# How to use HAVING to set the criteria for the output 

SELECT Column_1, COUNT(Column_1) AS Newcolumn_name
FROM table_name1
JOIN table_name2
	ON table_name1.column = table_name2.column
GROUP BY Column_1
HAVING COUNT(Column_1) > value

SELECT Column_1, AVG(Column_2) AS Newcolumn_name
FROM table_name1
JOIN table_name2
	ON table_name1.column = table_name2.column
GROUP BY Column_1
HAVING AVG(Column_2) > value
ORDER BY AVG(Column_2)
